/*   Given a Binary Tree, convert it to Binary Search Tree in such a way that keeps the original structure of Binary Tree intact.    */



   int i = 0 ;
      vector<int>v;
    void solve(Node* root){
        if(!root)
            return ;
            
        solve(root->left);
        v.push_back(root->data);
        solve(root->right);
    }
    void again(Node* root){
         if(!root)
            return  ;
            
        again(root->left);
        root->data = v[i];
        i++;
        again(root->right);
    }
    Node *binaryTreeToBST (Node *root)
    {
        if(root==NULL)
            return NULL ;
            
        solve(root);
        sort(v.begin(),v.end());
        again(root);
        return root;
    }
