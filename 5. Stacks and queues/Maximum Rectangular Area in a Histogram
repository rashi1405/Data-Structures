/*  Find the largest rectangular area possible in a given histogram where the largest rectangle can be made of a number of contiguous bars. For simplicity, assume that all bars have the same width and the width is 1 unit, there will be N bars height of each bar will be given by the array arr.  */



 long long getMaxArea(long long arr[], int n)
    {
        long long max_area = INT_MIN;
        
        stack<int>s ;
        vector<int>left(n);
        s.push(0);
        
        left[0] = -1 ;
        
        for(int i = 1 ; i < n ; i++){
            while(!s.empty() && arr[s.top()] >= arr[i]){
                s.pop() ;
            }
            if(s.empty()){
                left[i] = -1;
            }
            else{
                left[i] = s.top();
            }
            s.push(i);
        }
        
        while(!s.empty())
          s.pop();
          
         vector<int>right(n) ;
        
        s.push(n-1);
        right[n-1] = n ;
        
        for(int i = n-2; i >=0  ; i--){
            while(!s.empty() && arr[s.top()] >= arr[i]){
                s.pop() ;
            }
            if(s.empty()){
                right[i] = n;
            }
            else{
                right[i] = s.top();
            }
            s.push(i);
        }
            
        for(int i = 0 ; i < n ; i++){
          max_area = max((right[i] - left[i] - 1) * arr[i] , max_area);
          
        }
        return max_area;
    }
