 vector < int > bfsOfGraph(int V, vector < int > adj[]) {
      vector < int > bfs;
      vector < int > vis(V, 0);             // to keep check of the visited nodes
      queue < int > q;
      q.push(0);
      vis[0] = 1;
      while (!q.empty()) {
        int node = q.front();
        q.pop();
        bfs.push_back(node);  

        for (auto it: adj[node]) {        // traverse all adjacent nodes 
          if (!vis[it]) {
            q.push(it);                // and push in the queue if not visited previously 
            vis[it] = 1;
          }
        }
      }

      return bfs;         // return vector of bfs traversal
    }
